/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fesa.ico.compi;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.Reader;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java_cup.runtime.Symbol;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Benjiman
 */
public class VentanaPru extends javax.swing.JFrame {

    private List<Symbol> tokenLista;
    private File archivoLec;
    private String resultado;

    /**
     * Creates new form VentanaPru
     */
    public VentanaPru() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        analizadorSintacos = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        validador = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        traducion = new javax.swing.JTextArea();
        traductor = new javax.swing.JButton();
        cargador = new javax.swing.JButton();
        guardador = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        analizadorSintacos.setText("analizar");
        analizadorSintacos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                analizadorSintacosMouseClicked(evt);
            }
        });

        validador.setColumns(20);
        validador.setRows(5);
        jScrollPane1.setViewportView(validador);

        traducion.setColumns(20);
        traducion.setRows(5);
        jScrollPane2.setViewportView(traducion);

        traductor.setText("traducir");
        traductor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                traductorMouseClicked(evt);
            }
        });

        cargador.setText("cargar");
        cargador.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cargadorMouseClicked(evt);
            }
        });

        guardador.setText("guardar");
        guardador.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                guardadorMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(analizadorSintacos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cargador)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(traductor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(guardador))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(analizadorSintacos)
                    .addComponent(traductor)
                    .addComponent(cargador)
                    .addComponent(guardador))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void analizadorSintacosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_analizadorSintacosMouseClicked
        try {
            this.analizarTokens();
        } catch (IOException ex) {
            Logger.getLogger(VentanaPru.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_analizadorSintacosMouseClicked

    private void traductorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_traductorMouseClicked
        if (validador.getText().equals("Valido")) {
            try {
                traducir();
            } catch (IOException ex) {
                Logger.getLogger(VentanaPru.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_traductorMouseClicked

    private void cargadorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cargadorMouseClicked
        JFileChooser fc = new JFileChooser();

        int seleccion = fc.showOpenDialog(null);
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            archivoLec = fc.getSelectedFile();
        }
    }//GEN-LAST:event_cargadorMouseClicked

    private void guardadorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guardadorMouseClicked
        try {
            String nombre = "";
            JFileChooser file = new JFileChooser();
            file.showSaveDialog(this);
            File guarda = file.getSelectedFile();

            if (guarda != null) {
                /*guardamos el archivo y le damos el formato directamente,
    * si queremos que se guarde en formato doc lo definimos como .doc*/
                FileWriter save = new FileWriter(guarda + ".txt");
                save.write(resultado);
                save.close();
                JOptionPane.showMessageDialog(null,
                        "El archivo se a guardado Exitosamente",
                        "Informaci√≥n", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null,
                    "Su archivo no se ha guardado",
                    "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_guardadorMouseClicked

/**
 * @param args the command line arguments
 */
public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                



}
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPru.class

.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        



} catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPru.class

.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        



} catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPru.class

.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        



} catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPru.class

.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPru().setVisible(true);
            }
        });
    }

    private void analizarTokens() throws FileNotFoundException, IOException {
        tokenLista = new LinkedList<>();
        this.validador.selectAll();
        this.validador.replaceSelection("");
        int contadorID = 0;
        File fichero = archivoLec;//new File("test.txt");
        //PrintWriter writer;
        //writer = new PrintWriter(fichero);
        //writer.write(jTextField1.getText());
        //writer.close();
        Reader reader = new BufferedReader(new FileReader(fichero.getName()/*"test.txt"*/));
        LexicoSQL lexico = new LexicoSQL(reader);
        resultado = "";
        int i = 0;
        //while (i<1){
        //    Symbol token = lexico.next_token();
        //    jTextArea1.setText(token.toString());
        //    i++;
        //}
        String[] archivoPrueba = {"test.txt"};

        if (SintacticoSQL.main(archivoPrueba)) {
            validador.setText("Valido");
        } else {
            validador.setText("Invalido");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton analizadorSintacos;
    private javax.swing.JButton cargador;
    private javax.swing.JButton guardador;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea traducion;
    private javax.swing.JButton traductor;
    private javax.swing.JTextArea validador;
    // End of variables declaration//GEN-END:variables

    private void traducir() throws FileNotFoundException, IOException {
        tokenLista = new LinkedList<>();
        this.validador.selectAll();
        this.validador.replaceSelection("");
        int contadorID = 0;

        Reader reader = new BufferedReader(new FileReader(archivoLec));
        LexicoSQL lexico = new LexicoSQL(reader);
        resultado = "";
        String control = " ";
        while (!control.equals("EOF")) {
            Symbol token = lexico.next_token();
            switch (token.toString()) {
                case "#0":
                    control = "EOF";
                    break;
                case "#1":
                    break;
                case "#2":
                    resultado += " SELECT";
                    break;
                case "#3":
                    resultado += " FROM";
                    break;
                case "#4":
                    resultado += " WHERE";
                    break;
                case "#5":
                    resultado += " COUNT";
                    break;
                case "#6":
                    resultado += " DELETE";
                    break;
                case "#7":
                    resultado += ";\n";
                    break;
                case "#8":
                    resultado += " '";
                    break;
                case "#9":
                    resultado += " (";
                    break;
                case "#10":
                    resultado += ") ";
                    break;
                case "#11":
                    resultado += ", ";
                    break;
                case "#12":
                    resultado += " INSERT";
                    break;
                case "#13":
                    resultado += " INTO";
                    break;
                case "#14":
                    resultado += " VALUES";
                    break;
                case "#15":
                    resultado += " DISTINCT";
                    break;
                case "#16":
                    resultado += " *";
                    break;
                case "#17":
                    resultado += " =";
                    break;
                case "#18":
                    resultado += " <";
                    break;
                case "#19":
                    resultado += "> ";
                    break;
                case "#20":
                    resultado += " " + lexico.yytext();
                    break;
                case "#21":
                    resultado += " " + lexico.yytext();
                    break;
                default:
                    resultado += "<" + lexico.yytext() + ">";
            }
            traducion.setText(resultado);
        }
    }
}
